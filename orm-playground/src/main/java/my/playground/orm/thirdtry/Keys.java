/*
 * This file is generated by jOOQ.
 */
package my.playground.orm.thirdtry;


import my.playground.orm.thirdtry.tables.*;
import my.playground.orm.thirdtry.tables.records.*;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> AUTHOR__ = Internal.createUniqueKey(Author.AUTHOR, DSL.name(""), new TableField[]{Author.AUTHOR.ID}, true);
    public static final UniqueKey<Ent1Record> ENT1__ = Internal.createUniqueKey(Ent1.ENT1, DSL.name(""), new TableField[]{Ent1.ENT1.ID}, true);
    public static final UniqueKey<Ent2Record> ENT2__ = Internal.createUniqueKey(Ent2.ENT2, DSL.name(""), new TableField[]{Ent2.ENT2.ID}, true);
    public static final UniqueKey<Ent3Record> ENT3__ = Internal.createUniqueKey(Ent3.ENT3, DSL.name(""), new TableField[]{Ent3.ENT3.ID}, true);
    public static final UniqueKey<JointableinheritorRecord> JOINTABLEINHERITOR__ = Internal.createUniqueKey(Jointableinheritor.JOINTABLEINHERITOR, DSL.name(""), new TableField[]{Jointableinheritor.JOINTABLEINHERITOR.ID}, true);
    public static final UniqueKey<JointableparentRecord> JOINTABLEPARENT__ = Internal.createUniqueKey(Jointableparent.JOINTABLEPARENT, DSL.name(""), new TableField[]{Jointableparent.JOINTABLEPARENT.ID}, true);
    public static final UniqueKey<MappedEmailRecord> MAPPED_EMAIL__ = Internal.createUniqueKey(MappedEmail.MAPPED_EMAIL, DSL.name(""), new TableField[]{MappedEmail.MAPPED_EMAIL.ID}, true);
    public static final UniqueKey<MappedEmailEagerRecord> MAPPED_EMAIL_EAGER__ = Internal.createUniqueKey(MappedEmailEager.MAPPED_EMAIL_EAGER, DSL.name(""), new TableField[]{MappedEmailEager.MAPPED_EMAIL_EAGER.ID}, true);
    public static final UniqueKey<MappedEmailSubjectRecord> MAPPED_EMAIL_SUBJECT__ = Internal.createUniqueKey(MappedEmailSubject.MAPPED_EMAIL_SUBJECT, DSL.name(""), new TableField[]{MappedEmailSubject.MAPPED_EMAIL_SUBJECT.ID}, true);
    public static final UniqueKey<MappedMessageRecord> MAPPED_MESSAGE__ = Internal.createUniqueKey(MappedMessage.MAPPED_MESSAGE, DSL.name(""), new TableField[]{MappedMessage.MAPPED_MESSAGE.ID}, true);
    public static final UniqueKey<MappedMessageContentRecord> MAPPED_MESSAGE_CONTENT__ = Internal.createUniqueKey(MappedMessageContent.MAPPED_MESSAGE_CONTENT, DSL.name(""), new TableField[]{MappedMessageContent.MAPPED_MESSAGE_CONTENT.ID}, true);
    public static final UniqueKey<MappedMessageEagerRecord> MAPPED_MESSAGE_EAGER__ = Internal.createUniqueKey(MappedMessageEager.MAPPED_MESSAGE_EAGER, DSL.name(""), new TableField[]{MappedMessageEager.MAPPED_MESSAGE_EAGER.ID}, true);
    public static final UniqueKey<NonMappedEmailRecord> NON_MAPPED_EMAIL__ = Internal.createUniqueKey(NonMappedEmail.NON_MAPPED_EMAIL, DSL.name(""), new TableField[]{NonMappedEmail.NON_MAPPED_EMAIL.ID}, true);
    public static final UniqueKey<NonMappedMessageRecord> NON_MAPPED_MESSAGE__ = Internal.createUniqueKey(NonMappedMessage.NON_MAPPED_MESSAGE, DSL.name(""), new TableField[]{NonMappedMessage.NON_MAPPED_MESSAGE.ID}, true);
    public static final UniqueKey<PersonRecord> PERSON__ = Internal.createUniqueKey(Person.PERSON, DSL.name(""), new TableField[]{Person.PERSON.ID}, true);
    public static final UniqueKey<RankingRecord> RANKING__ = Internal.createUniqueKey(Ranking.RANKING, DSL.name(""), new TableField[]{Ranking.RANKING.ID}, true);
    public static final UniqueKey<SeparatetableinheritorRecord> SEPARATETABLEINHERITOR__ = Internal.createUniqueKey(Separatetableinheritor.SEPARATETABLEINHERITOR, DSL.name(""), new TableField[]{Separatetableinheritor.SEPARATETABLEINHERITOR.ID}, true);
    public static final UniqueKey<SeparatetableparentRecord> SEPARATETABLEPARENT__ = Internal.createUniqueKey(Separatetableparent.SEPARATETABLEPARENT, DSL.name(""), new TableField[]{Separatetableparent.SEPARATETABLEPARENT.ID}, true);
    public static final UniqueKey<SingletableparentRecord> SINGLETABLEPARENT__ = Internal.createUniqueKey(Singletableparent.SINGLETABLEPARENT, DSL.name(""), new TableField[]{Singletableparent.SINGLETABLEPARENT.ID}, true);
    public static final UniqueKey<SkillRecord> SKILL__ = Internal.createUniqueKey(Skill.SKILL, DSL.name(""), new TableField[]{Skill.SKILL.ID}, true);
}
