/*
 * This file is generated by jOOQ.
 */
package my.playground.orm.thirdtry.tables.records;


import my.playground.orm.thirdtry.tables.MappedMessageEager;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MappedMessageEagerRecord extends UpdatableRecordImpl<MappedMessageEagerRecord> implements Record2<byte[], Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mapped_message_eager.id</code>.
     */
    public void setId(byte[] value) {
        set(0, value);
    }

    /**
     * Getter for <code>mapped_message_eager.id</code>.
     */
    public byte[] getId() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>mapped_message_eager.email_id</code>.
     */
    public void setEmailId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>mapped_message_eager.email_id</code>.
     */
    public Long getEmailId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<byte[]> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<byte[], Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<byte[], Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<byte[]> field1() {
        return MappedMessageEager.MAPPED_MESSAGE_EAGER.ID;
    }

    @Override
    public Field<Long> field2() {
        return MappedMessageEager.MAPPED_MESSAGE_EAGER.EMAIL_ID;
    }

    @Override
    public byte[] component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getEmailId();
    }

    @Override
    public byte[] value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getEmailId();
    }

    @Override
    public MappedMessageEagerRecord value1(byte[] value) {
        setId(value);
        return this;
    }

    @Override
    public MappedMessageEagerRecord value2(Long value) {
        setEmailId(value);
        return this;
    }

    @Override
    public MappedMessageEagerRecord values(byte[] value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MappedMessageEagerRecord
     */
    public MappedMessageEagerRecord() {
        super(MappedMessageEager.MAPPED_MESSAGE_EAGER);
    }

    /**
     * Create a detached, initialised MappedMessageEagerRecord
     */
    public MappedMessageEagerRecord(byte[] id, Long emailId) {
        super(MappedMessageEager.MAPPED_MESSAGE_EAGER);

        setId(id);
        setEmailId(emailId);
    }
}
