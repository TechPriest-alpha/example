/*
 * This file is generated by jOOQ.
 */
package my.playground.orm.thirdtry.tables.records;


import my.playground.orm.thirdtry.tables.MappedMessageContent;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MappedMessageContentRecord extends UpdatableRecordImpl<MappedMessageContentRecord> implements Record2<String, byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mapped_message_content.content</code>.
     */
    public void setContent(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mapped_message_content.content</code>.
     */
    public String getContent() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mapped_message_content.id</code>.
     */
    public void setId(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>mapped_message_content.id</code>.
     */
    public byte[] getId() {
        return (byte[]) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<byte[]> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, byte[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, byte[]> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MappedMessageContent.MAPPED_MESSAGE_CONTENT.CONTENT;
    }

    @Override
    public Field<byte[]> field2() {
        return MappedMessageContent.MAPPED_MESSAGE_CONTENT.ID;
    }

    @Override
    public String component1() {
        return getContent();
    }

    @Override
    public byte[] component2() {
        return getId();
    }

    @Override
    public String value1() {
        return getContent();
    }

    @Override
    public byte[] value2() {
        return getId();
    }

    @Override
    public MappedMessageContentRecord value1(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MappedMessageContentRecord value2(byte[] value) {
        setId(value);
        return this;
    }

    @Override
    public MappedMessageContentRecord values(String value1, byte[] value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MappedMessageContentRecord
     */
    public MappedMessageContentRecord() {
        super(MappedMessageContent.MAPPED_MESSAGE_CONTENT);
    }

    /**
     * Create a detached, initialised MappedMessageContentRecord
     */
    public MappedMessageContentRecord(String content, byte[] id) {
        super(MappedMessageContent.MAPPED_MESSAGE_CONTENT);

        setContent(content);
        setId(id);
    }
}
