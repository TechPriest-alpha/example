/*
 * This file is generated by jOOQ.
 */
package my.playground.orm.thirdtry.tables.records;


import my.playground.orm.thirdtry.tables.Ranking;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RankingRecord extends UpdatableRecordImpl<RankingRecord> implements Record5<Long, Integer, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Ranking.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>Ranking.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>Ranking.rank</code>.
     */
    public void setRank(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Ranking.rank</code>.
     */
    public Integer getRank() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Ranking.observer_id</code>.
     */
    public void setObserverId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>Ranking.observer_id</code>.
     */
    public Long getObserverId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>Ranking.skill_id</code>.
     */
    public void setSkillId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>Ranking.skill_id</code>.
     */
    public Long getSkillId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>Ranking.subject_id</code>.
     */
    public void setSubjectId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>Ranking.subject_id</code>.
     */
    public Long getSubjectId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, Long, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Ranking.RANKING.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Ranking.RANKING.RANK;
    }

    @Override
    public Field<Long> field3() {
        return Ranking.RANKING.OBSERVER_ID;
    }

    @Override
    public Field<Long> field4() {
        return Ranking.RANKING.SKILL_ID;
    }

    @Override
    public Field<Long> field5() {
        return Ranking.RANKING.SUBJECT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getRank();
    }

    @Override
    public Long component3() {
        return getObserverId();
    }

    @Override
    public Long component4() {
        return getSkillId();
    }

    @Override
    public Long component5() {
        return getSubjectId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getRank();
    }

    @Override
    public Long value3() {
        return getObserverId();
    }

    @Override
    public Long value4() {
        return getSkillId();
    }

    @Override
    public Long value5() {
        return getSubjectId();
    }

    @Override
    public RankingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RankingRecord value2(Integer value) {
        setRank(value);
        return this;
    }

    @Override
    public RankingRecord value3(Long value) {
        setObserverId(value);
        return this;
    }

    @Override
    public RankingRecord value4(Long value) {
        setSkillId(value);
        return this;
    }

    @Override
    public RankingRecord value5(Long value) {
        setSubjectId(value);
        return this;
    }

    @Override
    public RankingRecord values(Long value1, Integer value2, Long value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RankingRecord
     */
    public RankingRecord() {
        super(Ranking.RANKING);
    }

    /**
     * Create a detached, initialised RankingRecord
     */
    public RankingRecord(Long id, Integer rank, Long observerId, Long skillId, Long subjectId) {
        super(Ranking.RANKING);

        setId(id);
        setRank(rank);
        setObserverId(observerId);
        setSkillId(skillId);
        setSubjectId(subjectId);
    }
}
